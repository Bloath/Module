/* Includes ------------------------------------------------------------------*/
#include "string.h"

#include "../BufferQueue/BufferQueue.h"
#include "../Sys_Conf.h"
#include "../Common/Delay.h"

#include "ESP8266_HAL.h"
#include "ESP8266_Handle.h"
#include "main.h"

/* Private typedef -----------------------------------------------------------*/
/* Private define ------------------------------------------------------------*/
/* Private macro -------------------------------------------------------------*/
/* Private variables ---------------------------------------------------------*/
extern UART_HandleTypeDef huart2;


/* Private function prototypes -----------------------------------------------*/
/* Private functions ---------------------------------------------------------*/

/*********************************************************************************************

  * @brief  ESP8266 硬件串口发送
  * @param  data：需要发送的数据指针
  * @param  length：数据长度  
  * @retval 无
  * @remark 

  ********************************************************************************************/
BoolEnum ESP8266_HalTrans(uint8_t *data, uint16_t length)
{
  HAL_UART_Transmit(&huart2, data, length, 1000);   //发送数据
  return FALSE;
}
/*********************************************************************************************

  * @brief  模块硬件复位
  * @return 无
  * @remark 

  ********************************************************************************************/
void ESP8266_Reset()
{
  ESP8266_SendString("AT+RST\r\n");
  
//  HAL_GPIO_WritePin(RESET_GPIO_Port, RESET_Pin, GPIO_PIN_RESET);
//  Delay_ms(2);
//  HAL_GPIO_WritePin(RESET_GPIO_Port, RESET_Pin, GPIO_PIN_SET);
}
/*********************************************************************************************

  * @brief  开关ESP8266 的串口
  * @param  isOn：是否开启
  * @return 无
  * @remark 

  ********************************************************************************************/
void ESP8266_UART(BoolEnum isOn)
{
  if(isOn == TRUE)
  { __HAL_UART_ENABLE(&huart2);   }
  else
  { __HAL_UART_DISABLE(&huart2); }   
}