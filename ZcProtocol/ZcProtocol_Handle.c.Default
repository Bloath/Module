/* Includes ------------------------------------------------------------------*/
#include "stdlib.h"
#include "string.h"

#include "../Sys_Conf.h"
#include "../Common/Array.h"
#include "ZcProtocol.h"
#include "ZcProtocol_API.h"
/* private typedef ------------------------------------------------------------*/
/* private define -------------------------------------------------------------*/
/* private macro --------------------------------------------------------------*/
/* private variables ----------------------------------------------------------*/
/* private function prototypes ------------------------------------------------*/
/*********************************************************************************************

  * @brief  拙诚协议 => 网络操作类指令处理
  * @param  protocol：协议指针
  * @retval 0：处理成功
            1：没发现操作类指令
            2：处理失败
  * @remark 

  ********************************************************************************************/
uint8_t ZcProtocol_NetOperationCmdHandle(ZcProtocol *zcProtocol)
{
  uint8_t res = 0;              
  
  switch(zcProtocol->head.cmd)                          
  { 
  default:
    res = 1;
    break;
   }
  
  return res;
}
/*********************************************************************************************

  * @brief  拙诚协议 => 2.4G无线操作
  * @param  zcProtocol：协议指针
  * @retval 0：处理成功
  * @remark 

  ********************************************************************************************/
uint8_t ZcProtocol_24GOperationCmdHandle(ZcProtocol *zcProtocol)
{
  uint8_t res = 0;              
  
  switch(zcProtocol->head.cmd)                          
  { 
  default:
    res = 1;
    break;
  }
  
  return res;
}
/*********************************************************************************************

  * @brief  拙诚协议 => 485协议处理
  * @param  zcProtocol：协议指针
  * @retval 
  * @remark 

  ********************************************************************************************/
uint8_t ZcProtocol_485OperationCmdHandle(ZcProtocol *zcProtocol)
{
  uint8_t res = 0;              
  
  switch(zcProtocol->head.cmd)                          
  { 
  default:
    res = 1;
    break;
  }
  
  
  return res;
}