#ifndef _MODULE_CONF_H_
#define _MODULE_CONF_H_

/* Includes ------------------------------------------------------------------*/
#include "stm32f0xx_hal.h"
#include "stdint.h"
#include "string.h"
#include "stdlib.h"
#include "stdbool.h"
#include "stdio.h"
#include "Time.h"

/* Public typedef ------------------------------------------------------------*/
typedef enum
{
    Process_Init = 0,
    Process_Idle,
    Process_Start,
    Process_Run,
    Process_BeforeFinish,
    Process_Finish,
    Process_LongWait,
    Process_Wait,
    Process_Reset,
    Process_ResetWait,
    Process_OrderAt,
    Process_OrderAtWait,
    Process_ErrorTrigged,
    Process_ErrorHandle,
    Process_Lock,
} ProcessEnum;

typedef struct
{
    ProcessEnum current;
    ProcessEnum last;
}ProcessStruct;

typedef enum
{
    HighLevelTrigged,
    HighLevelHandle,
    MediumLevelTrigged,
    MediumLevelHandle,
    LowLevelTrigged,
    LowLevelHandle,
} HandleLevelEnum;
/* Public variables ----------------------------------------------------------*/
extern uint32_t realTimeCounter, timeStampCounter;
extern uint32_t uwTick;
extern RTC_HandleTypeDef hrtc;

/* Public define -------------------------------------------------------------*/
#define sysTime uwTick
//#define realTime (*(uint32_t *)(0x4B0))
#define realTime (realTimeCounter)
#define timeStamp (timeStampCounter)

#define DEBUG 1
#define SECONDS_YEAR   31536000
#define SECONDS_DAY    86400
#define SECONDS_HOUR   3600
#define SECONDS_MIN    60

#define PROCESS_CHANGE(processObj, process)     \
    {                                           \
        processObj.last = processObj.current;   \
        processObj.current = process;           \
    }

/* Public macro --------------------------------------------------------------*/
/* Public function prototypes ------------------------------------------------*/

#endif
