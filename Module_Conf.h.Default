#ifndef _MODULE_CONF_H_
#define _MODULE_CONF_H_

/* Includes ------------------------------------------------------------------*/
#include "main.h"
#include "stdint.h"
#include "string.h"
#include "stdlib.h"
#include "stdbool.h"
#include "stdio.h"
#include "Time.h"

/* Public typedef ------------------------------------------------------------*/
typedef enum
{
    Process_Init = 0,
    Process_Idle,
    Process_Start,
    Process_Run,
    Process_RunWait,
    Process_BeforeFinish,
    Process_Finish,
    Process_LongWait,
    Process_Wait,
    Process_Reset,
    Process_ResetWait,
    Process_OrderAt,
    Process_OrderAtWait,
    Process_ErrorTrigged,
    Process_ErrorHandle,
    Process_Lock,
} ProcessEnum;

typedef struct
{
    ProcessEnum current;
    ProcessEnum last;
}ProcessStruct;

/* Public variables ----------------------------------------------------------*/
extern uint32_t realTimeCounter, timeStampCounter;
extern uint32_t uwTick;
/* Public define -------------------------------------------------------------*/
#define MODULE_DEBUG    1   
#define sysTime uwTick
//#define realTime (*(uint32_t *)(0x4B0))
#define realTime (realTimeCounter)
#define timeStamp (timeStampCounter)

#define SECONDS_YEAR   31536000L
#define SECONDS_MONTH   2592000L
#define SECONDS_DAY    86400L
#define SECONDS_HOUR   3600L
#define SECONDS_MIN    60L

#define DATA_PREFIX 



/* Public macro --------------------------------------------------------------*/
#define PROCESS_CHANGE(processObj, process)     \
    {                                           \
        processObj.last = processObj.current;   \
        processObj.current = process;           \
    }
	

/* Public function prototypes ------------------------------------------------*/

#endif
